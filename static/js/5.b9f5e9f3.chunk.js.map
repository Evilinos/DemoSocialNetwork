{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.tsx","utilities/validators/validators.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/SendMessageForm.tsx","components/Dialogs/Dialogs.tsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","Textarea","input","meta","props","hasError","touched","error","className","styles","formControl","Input","required","value","maxLengthCreator","maxLength","length","DialogItem","path","id","s","dialog","to","activeClassName","active","name","Message","message","maxLength100","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","placeholder","Dialogs","dialogsElements","state","dialogs","map","d","key","messagesElements","messages","m","dialogsItems","values","sendMessage","newMessageText","mapStateToProps","isAuth","auth","compose","connect","dialogsPage","Component","RedirectComponent","this","React","memo"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,+B,oJCO9DC,EAAwC,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,gCAExEC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OAAO,yBAAKC,UAAWC,IAAOC,YAAc,KAAOL,EAAWI,IAAOF,MAAQ,MACjE,8CAAcL,EAAWE,IACxBC,GAAY,8BAAOF,EAAKI,SAS5BI,EAAkC,SAAC,GAA6B,IAA5BT,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,gCAElEC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OAAO,yBAAKC,UAAWC,IAAOC,YAAc,KAAOL,EAAWI,IAAOF,MAAQ,MACzE,2CAAWL,EAAWE,IACrBC,GAAY,8BAAOF,EAAKI,U,iCC3BjC,oEAAO,IAAMK,EAAW,SAAAC,GACpB,IAAIA,EACJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAGA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,oBCLjChB,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,8FCiBvJiB,EATyB,SAACb,GACrC,IAAIc,EAAI,mBAAed,EAAMe,IAC7B,OACI,yBAAKX,UAAS,UAAKY,IAAEC,SACjB,kBAAC,IAAD,CAASC,GAAIJ,EAAMK,gBAAiBH,IAAEI,QAASpB,EAAMqB,QCAlDC,EANsB,SAACtB,GAClC,OACI,yBAAKI,UAAWY,IAAEO,SAAUvB,EAAMuB,U,oCCApCC,EAAed,YAAiB,KAavBe,cAAU,CAACC,KAAM,yBAAjBD,EAX4B,SAACzB,GACxC,OAAO,0BAAM2B,SAAU3B,EAAM4B,cACzB,kBAACC,EAAA,EAAD,CAAOC,UAAWjC,IACXkC,SAAU,CAACvB,IAAUgB,GACrBH,KAAM,iBACNW,YAAa,uBACpB,4CCkBOC,EAtBsB,SAACjC,GAElC,IAAIkC,EAAkBlC,EAAMmC,MAAMC,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYjB,KAAMiB,EAAEjB,KAAMkB,IAAKD,EAAEvB,GAAIA,GAAIuB,EAAEvB,QAC1FyB,EAAmBxC,EAAMmC,MAAMM,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASnB,QAASmB,EAAEnB,QAASgB,IAAKG,EAAE3B,QAMzF,OACI,yBAAKX,UAAWY,IAAEoB,SACd,yBAAKhC,UAAWY,IAAE2B,cACbT,GAEL,yBAAK9B,UAAWY,IAAEyB,UACd,6BAAMD,GACN,kBAAC,EAAD,CAAiBb,SAXT,SAACiB,GACjB5C,EAAM6C,YAAYD,EAAOE,sB,gDCF7BC,EAAkB,SAACZ,GAAD,MAAY,CAC9Ba,OAAQb,EAAMc,KAAKD,S,QCORE,sBACXC,aAPkB,SAAChB,GACnB,MAAO,CACHA,MAAOA,EAAMiB,eAKyE,CAACP,mBDtB/D,SAACQ,GAAe,IAEtCC,EAFqC,uKAInC,OAAKC,KAAKvD,MAAMgD,OACT,kBAACK,EAAcE,KAAKvD,OADI,kBAAC,IAAD,CAAUkB,GAAI,eAJV,GAEXsC,IAAMH,WAQtC,OAFiCF,YAAQJ,EAARI,CAAyBG,KCgB1DE,IAAMC,KAHKP,CAIbjB","file":"static/js/5.b9f5e9f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1unnd\",\"error\":\"FormsControls_error__amWdj\"};","import React from \"react\";\r\nimport styles from './FormsControls.module.css'\r\n\r\ntype TextareaPropsType = {\r\n    input: any\r\n    meta: any\r\n}\r\n\r\nexport const Textarea: React.FC<TextareaPropsType> = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error;\r\n    return <div className={styles.formControl + ' ' + (hasError ? styles.error : ' ')}>\r\n                <textarea {...input} {...props}/>\r\n                {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n};\r\n\r\ntype InputPropsType = {\r\n    input: any\r\n    meta: any\r\n}\r\n\r\nexport const Input: React.FC<InputPropsType> = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error;\r\n    return <div className={styles.formControl + ' ' + (hasError ? styles.error : ' ')}>\r\n        <input {...input} {...props}/>\r\n        {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n};","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3suIw\",\"dialog\":\"Dialogs_dialog__2UWdo\",\"active\":\"Dialogs_active__jJL3n\",\"messages\":\"Dialogs_messages__3307O\",\"message\":\"Dialogs_message__3YDcR\"};","import React from \"react\"\r\nimport s from '../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\"\r\n\r\ntype PropsType = {\r\n    name: string\r\n    id: number\r\n}\r\n\r\nconst DialogItem: React.FC<PropsType> = (props) => {\r\n    let path = `/dialogs/${props.id}`;\r\n    return (\r\n        <div className={`${s.dialog}`}>\r\n            <NavLink to={path} activeClassName={s.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from \"react\"\r\nimport s from '../Dialogs.module.css'\r\n\r\ntype PropsType = {\r\n    message: string\r\n}\r\n\r\nconst Message: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from \"react\"\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utilities/validators/validators\";\r\n\r\ntype PropsType = {\r\n    handleSubmit: any\r\n}\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\n\r\nlet SendMessageForm: React.FC<PropsType> = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <Field component={Textarea}\r\n               validate={[required, maxLength100]}\r\n               name={'newMessageText'}\r\n               placeholder={'Enter your message'}/>\r\n        <button>Send</button>\r\n    </form>\r\n}\r\n\r\n\r\nexport default reduxForm({form: 'dialogSendMessageForm'})(SendMessageForm)","import React from \"react\"\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\"\r\nimport Message from \"./Message/Message\";\r\nimport SendMessageForm from \"./SendMessageForm\";\r\nimport {DialogType, MessageType} from \"../../types/types\";\r\n\r\ntype PropsType = {\r\n    state: {dialogs: Array<DialogType>, messages: Array<MessageType>}\r\n    sendMessage: (values: any) => void\r\n}\r\n\r\n\r\nconst Dialogs: React.FC<PropsType> = (props) => {\r\n\r\n    let dialogsElements = props.state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = props.state.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n\r\n    let onSendMessage = (values: any) => {\r\n        props.sendMessage(values.newMessageText)\r\n    };\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <SendMessageForm onSubmit={onSendMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogs","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let connectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n\r\n    return connectedRedirectComponent\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})","import React from \"react\"\r\nimport {sendMessage} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {DialogType, MessageType} from \"../../types/types\";\r\n\r\ntype MapStatePropsType = {\r\n    state: {dialogs: Array<DialogType>, messages: Array<MessageType>}\r\n}\r\ntype MapDispatchPropsType = {\r\n    sendMessage: (values: any) => void\r\n}\r\ntype OwnProps = {\r\n\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        state: state.dialogsPage,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect<MapStatePropsType, MapDispatchPropsType, OwnProps, AppStateType>(mapStateToProps, {sendMessage}),\r\n    withAuthRedirect,\r\n    React.memo,\r\n)(Dialogs)"],"sourceRoot":""}