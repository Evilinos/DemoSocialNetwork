{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.js","utilities/validators/validators.js","assets/images/user.jpg","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/profileBackground.jpg","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataEdit.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Textarea","input","meta","props","hasError","touched","error","className","styles","formControl","Input","required","value","maxLengthCreator","maxLength","length","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","descriptionItem","onDoubleClick","onChange","e","currentTarget","onBlur","updateUserStatus","autoFocus","ProfileDataEdit","descriptionBlock","alt","src","profile","photos","large","userPhoto","description","onSubmit","handleSubmit","Field","component","type","name","keys","contacts","map","key","s","onClick","exitEditMode","updatePhoto","isOwner","ButtonUpdateAvatar","target","files","reduxForm","form","ProfileData","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","toEditMode","LookingForAJob","Contacts","ProfileInfo","saveProfile","wrapper","profileBackground","initialValues","formData","then","MyPosts","item","message","likesCounts","maxLength10","AddPostForm","validate","placeholder","postElements","posts","reverse","p","Post","id","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","Profile","Preloader","ProfileContainer","userId","this","match","params","authUserId","history","getUserProfile","getUserStatus","refreshProfile","prevProps","prevState","snapshot","React","Component","compose","auth","withRouter","memo"],"mappings":"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","file":"static/js/4.f6b941b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1unnd\",\"error\":\"FormsControls_error__amWdj\"};","import React from \"react\";\r\nimport styles from './FormsControls.module.css'\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error\r\n    return <>\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : ' ')}>\r\n            <div>\r\n                <textarea {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n        </>\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error\r\n    return <>\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : ' ')}>\r\n            <div>\r\n                <input {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    </>\r\n}","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","module.exports = __webpack_public_path__ + \"static/media/user.209d8a39.jpg\";","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProfileInfo_wrapper__39M0N\",\"profileBackground\":\"ProfileInfo_profileBackground__23mlq\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__VlRTk\",\"description\":\"ProfileInfo_description__lU_fF\",\"descriptionItem\":\"ProfileInfo_descriptionItem__ImUEi\"};","module.exports = __webpack_public_path__ + \"static/media/profileBackground.450874ba.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__D_09Y\",\"posts\":\"MyPosts_posts__n8PCf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1NrTz\"};","import React, {useEffect, useState} from 'react'\r\nimport styles from './ProfileInfo.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateMode = () => {\r\n        setEditMode(false)\r\n        props.updateUserStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return <div className={styles.descriptionItem}>\r\n        {!editMode &&\r\n        <div>\r\n            <span onDoubleClick={activateMode}>{props.status || '-----'}</span>\r\n        </div>\r\n        }\r\n        {editMode &&\r\n        <div>\r\n            <input onChange={onStatusChange} onBlur={deactivateMode} autoFocus={true} value={status}/>\r\n        </div>}\r\n    </div>\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import styles from \"./ProfileInfo.module.css\";\r\nimport React from \"react\";\r\nimport userPhoto from \"../../../assets/images/user.jpg\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport s from '../../common/FormsControls/FormsControls.module.css'\r\n\r\nlet ProfileDataEdit = props => {\r\n\r\n    return <div className={styles.descriptionBlock}>\r\n        <img alt='Avatar' src={props.profile.photos.large || userPhoto}/>\r\n        <div className={styles.description}>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div className={styles.descriptionItem}>Full name :\r\n                    <Field component='input' type='text' name='fullName'/>\r\n                </div>\r\n                <div className={styles.descriptionItem}>Looking For A job :\r\n                    <Field component='select' name='lookingForAJob'>\r\n                        <option value='true'>Yes</option>\r\n                        <option value='false'>No</option>\r\n                    </Field>\r\n                </div>\r\n                <div className={styles.descriptionItem}>Job description :\r\n                    <Field component='input' type='text' name='lookingForAJobDescription'/>\r\n                </div>\r\n                <div className={styles.descriptionItem}>About :\r\n                    <Field component='input' type='text' name='aboutMe'/>\r\n                </div>\r\n                <div className={styles.descriptionItem}>\r\n                    Contacts:\r\n                    {Object.keys(props.profile.contacts).map(key => {\r\n                        return <div key={key}>\r\n                            {key + \": \"}<Field component='input' type='text' name={`contacts.${key}`}/>\r\n                        </div>\r\n                    })}\r\n                </div>\r\n                {props.error && <div className={s.error}>{props.error}</div>}\r\n                <button>Save</button>\r\n                <button onClick={props.exitEditMode}>Back</button>\r\n            </form>\r\n        </div>\r\n\r\n        <ButtonUpdateAvatar updatePhoto={props.updatePhoto} isOwner={props.isOwner}/>\r\n    </div>\r\n}\r\n\r\nexport const ButtonUpdateAvatar = (props) => {\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.updatePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    return <>\r\n        {props.isOwner && <div><input type='file' onChange={onMainPhotoSelected}/></div>}\r\n    </>\r\n}\r\n\r\nProfileDataEdit = reduxForm({\r\n    form: 'edit_profile',\r\n})(ProfileDataEdit)\r\n\r\nexport default ProfileDataEdit","import React, {useState} from 'react'\r\nimport styles from './ProfileInfo.module.css'\r\nimport profileBackground from '../../../assets/images/profileBackground.jpg'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.jpg\";\r\nimport ProfileDataEdit from \"./ProfileDataEdit\";\r\n\r\nconst ProfileInfo = ({saveProfile, ...props}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(() => {\r\n            setEditMode(false)\r\n        })\r\n    }\r\n\r\n\r\n    return <div className={styles.wrapper}>\r\n        <img alt='Background' className={styles.profileBackground} src={profileBackground}/>\r\n\r\n        {editMode\r\n            ? <ProfileDataEdit {...props} initialValues={props.profile} onSubmit={onSubmit} exitEditMode={() => {setEditMode(false)}}/>\r\n            : <ProfileData {...props} toEditMode={() => {setEditMode(true)}}/>}\r\n\r\n    </div>\r\n\r\n}\r\n\r\nconst ProfileData = props => {\r\n    return <div className={styles.descriptionBlock}>\r\n        <img alt='Avatar' src={props.profile.photos.large || userPhoto}/>\r\n        <div className={styles.description}>\r\n            <div className={styles.descriptionItem}>Full name: {props.profile.fullName}</div>\r\n            <ProfileStatusWithHooks status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n            <LookingForAJob lookingForAJob={props.profile.lookingForAJob}\r\n                            lookingForAJobDescription={props.profile.lookingForAJobDescription}/>\r\n            <div className={styles.descriptionItem}>About: {props.profile.aboutMe}</div>\r\n            <Contacts contacts={props.profile.contacts}/>\r\n            {props.isOwner && <div>\r\n                <button onClick={props.toEditMode}>Edit</button>\r\n            </div>}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst LookingForAJob = (props) => {\r\n    return <>\r\n        <div className={styles.descriptionItem}>Looking for a\r\n            job: {props.lookingForAJob ? 'yes' : 'no'}</div>\r\n\r\n        {props.lookingForAJob &&\r\n        <div className={styles.descriptionItem}>Job\r\n            description: {props.lookingForAJobDescription}</div>}\r\n    </>\r\n}\r\n\r\nconst Contacts = (props) => {\r\n    return <div className={styles.descriptionItem}>\r\n        Contacts:\r\n        <ul>\r\n            {Object.keys(props.contacts).map(key => {\r\n                return <li key={key}>{key + ': ' + props.contacts[key]}</li>\r\n            })}\r\n        </ul>\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst MyPosts = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img alt='avatar' src='https://thewallpaper.co/wp-content/uploads/2017/08/disney-action-macbook-warrior-futuristic-hd-abstract-wallpapers-alien-backgrounds-aliens-fighting-adventure-avatar-mobile-scifi-free-images-fantasy.jpg' />\r\n            {props.message}\r\n            <div><span>Like: {props.likesCounts}</span></div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default MyPosts","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utilities/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nlet AddPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <Field component={Textarea}\r\n               validate={[required, maxLength10]}\r\n               name={'newPostText'}\r\n               placeholder={'Enter your text'}/>\r\n        <button>Add Post</button>\r\n    </form>\r\n}\r\n\r\nAddPostForm = reduxForm({form: 'profileAddNewPostForm'})(AddPostForm)\r\n\r\nconst MyPosts = props => {\r\n    let postElements = [...props.posts].reverse().map(p => <Post likesCounts={p.likesCounts} key={p.id} message={p.message}/>)\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddPostForm onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyPosts","import {addPost} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,{addPost})(MyPosts)\r\n\r\nexport default MyPostsContainer","import React from 'react'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\"\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} isOwner={props.isOwner} updatePhoto={props.updatePhoto}\r\n                         status={props.status} updateUserStatus={props.updateUserStatus} saveProfile={props.saveProfile}/>\r\n            <MyPostsContainer />\r\n        </div>)\r\n\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport Profile from './Profile'\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getUserStatus, saveProfile, updatePhoto, updateUserStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authUserId\r\n            if (!userId) this.props.history.push('/login')\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getUserStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId)\r\n        this.refreshProfile()\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} isOwner={!this.props.match.params.userId} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authUserId: state.auth.id,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus, updatePhoto, saveProfile}),\r\n    withRouter,\r\n    React.memo,\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}