{"version":3,"sources":["components/Navbar/Navbar.module.css","serviceWorker.js","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Navbar/Navbar.tsx","redux/app-reducer.ts","App.js","redux/sidebar-reducer.ts","redux/redux-store.ts","index.js","redux/auth-reducer.ts","App.module.css","components/Header/Header.module.css","components/common/Preloader/Preloader.tsx","components/common/Preloader/Preloader.module.css","api/api.js","redux/profile-reducer.ts","redux/dialogs-reducer.ts","utilities/object-helpers.js","redux/users-reducer.ts","assets/images/preloader.svg"],"names":["module","exports","Boolean","window","location","hostname","match","Header","props","className","styles","header","alt","src","loginBlock","isAuth","name","login","onClick","logout","to","connect","state","auth","Navbar","s","nav","item","activeClassName","active","href","initialState","initialized","error","appReducer","action","type","DialogsContainer","React","lazy","UsersContainer","ProfileContainer","Login","App","catchAllUnhandledErrors","promiseRejectionEvent","reason","requestError","message","this","initializeApp","addEventListener","removeEventListener","appWrapper","appWrapperContent","fallback","Preloader","path","render","from","exact","Component","app","dispatch","getAuthUserData","then","sidebarReducer","rootReducer","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","sidebar","usersPage","usersReducer","authReducer","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","id","email","isFetching","captchaUrl","setAuthUserData","payload","toggleIsFetching","getCaptchaUrlSuccess","a","authAPI","me","response","resultCode","data","password","rememberMe","captcha","getCaptchaUrl","messages","length","stopSubmit","_error","securityAPI","url","wrapper","image","preloader","instance","axios","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","follow","post","unfollow","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","updatePhoto","photoFile","formData","FormData","append","saveProfile","profile","ADD_POST","posts","likesCounts","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJob","lookingForAJobDescription","fullName","userId","photos","small","large","addPost","newPostText","setUserStatus","getUserProfile","getUserStatus","updateUserStatus","file","getState","Promise","reject","newPost","filter","p","postId","dialogs","sendMessage","newMessageText","newMessage","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","users","totalUsersCount","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleFollowingProgress","requestUsers","page","totalCount","followUnfollowFlow","apiMethod","actionCreator","bind","followed"],"mappings":"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","file":"static/js/main.b8dc31d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__wYuUc\",\"item\":\"Navbar_item__VdCig\",\"active\":\"Navbar_active__3TNvZ\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport styles from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n    logout: () => void\r\n}\r\n\r\nconst Header: React.FC<PropsType> = (props) => {\r\n    return <header className={styles.header}>\r\n        <img alt='Logo' src='https://i.pinimg.com/736x/5a/ae/50/5aae503e4f037a5a4375944d8861fb6a.jpg'/>\r\n        <div className={styles.loginBlock}>\r\n            {props.isAuth\r\n                ? <div className={styles.name}>\r\n                    {props.login} <div><button  onClick={props.logout}>Log out</button></div>\r\n                </div>\r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n    </header>\r\n};\r\n\r\nexport default Header","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\ntype OwnPropsType = {}\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\ntype MapDispatchPropsType = {\r\n    logout: () => void\r\n}\r\n\r\n\r\ntype PropsType = OwnPropsType & MapStatePropsType & MapDispatchPropsType\r\n\r\nconst HeaderContainer: React.FC<PropsType> = (props) => {\r\n    return <Header {...props}/>\r\n};\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>(mapStateToProps,\r\n    {logout})(HeaderContainer)","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {}\r\n\r\nconst Navbar: React.FC<PropsType> = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}><NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink></div>\r\n            <div className={s.item}><NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink></div>\r\n            <div className={s.item}><a href=\"#\">#News#</a></div>\r\n            <div className={s.item}><a href=\"#\">#Music#</a></div>\r\n            <div className={s.item}><a href=\"#\">#Settings#</a></div>\r\n            <div className={s.item}><NavLink to=\"/users\" activeClassName={s.active}>Find Users</NavLink></div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar","// @ts-ignore\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'app/INITIALIZED_SUCCESS'\r\nconst REQUEST_ERROR = 'app/REQUEST_ERROR'\r\n\r\nlet initialState = {\r\n    initialized: false as boolean,\r\n    error: null as string | null,\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst appReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {...state, initialized: true}\r\n        case REQUEST_ERROR:\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype InitializedSuccessActionType = {type: typeof INITIALIZED_SUCCESS}\r\ntype RequestErrorActionType = {type: typeof REQUEST_ERROR, error: string}\r\n\r\nexport const initializedSuccess = ():InitializedSuccessActionType => ({type: INITIALIZED_SUCCESS })\r\nexport const requestError = (error: string):RequestErrorActionType => ({type: REQUEST_ERROR, error })\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    let promise = dispatch(getAuthUserData())\r\n    promise.then( () => {\r\n        dispatch(initializedSuccess())\r\n    })\r\n}\r\n\r\nexport default appReducer","import React, {Suspense} from 'react';\nimport styles from './App.module.css';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Navbar from './components/Navbar/Navbar';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport {initializeApp, requestError} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\nconst Login = React.lazy(() => import(\"./components/Login/Login\"));\n\nclass App extends React.Component {\n    catchAllUnhandledErrors = (promiseRejectionEvent) => {\n        if (promiseRejectionEvent.reason) {\n            this.props.requestError(promiseRejectionEvent.reason.message)\n        }\n    };\n\n    componentDidMount() {\n        this.props.initializeApp();\n        window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors)\n    }\n\n\n\n    render() {\n        if (!this.props.initialized) return <Preloader/>;\n\n        return <div className={styles.appWrapper}>\n            <HeaderContainer/>\n            <Navbar/>\n            <div className={styles.appWrapperContent}>\n                {this.props.error &&\n                <div className={styles.requestError}>\n                    <button onClick={() => this.props.requestError(null)}>X</button>\n                    <div>{this.props.error}</div>\n                </div>}\n                <Suspense fallback={<Preloader/>}>\n                    <Switch>\n                        <Route path='/dialogs'\n                               render={() => <DialogsContainer/>}/>\n                        <Route path='/profile/:userId?'\n                               render={() => <ProfileContainer/>}/>\n                        <Route path='/users'\n                               render={() => <UsersContainer/>}/>\n                        <Route path='/login'\n                               render={() => <Login/>}/>\n                        <Redirect from=\"/\" to=\"/profile\" />\n                        <Redirect exact from=\"/DemoSocialNetwork/\" to=\"/profile\" /> {/* for deploy on gh-pages*/}\n                        <Route render={() => <div>404 NOT FOUND</div>}/>\n                    </Switch>\n                </Suspense>\n            </div>\n        </div>\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized,\n    error: state.app.error\n});\n\nexport default connect(mapStateToProps, ({initializeApp, requestError}))(App)","\r\nlet initialState = {}\r\n\r\nconst sidebarReducer = (state = initialState, action: any) => {\r\n    return state\r\n}\r\n\r\nexport default sidebarReducer","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\"\r\nimport profileReducer from \"./profile-reducer\"\r\nimport dialogsReducer from \"./dialogs-reducer\"\r\nimport sidebarReducer from \"./sidebar-reducer\"\r\nimport usersReducer from \"./users-reducer\"\r\nimport authReducer from \"./auth-reducer\"\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n});\r\n\r\ntype RootReducerType = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n// @ts-ignore\r\nwindow.__store__ = store;\r\n\r\n\r\nexport default store","import * as serviceWorker from './serviceWorker';\nimport ReactDOM from \"react-dom\";\nimport './index.css';\nimport React from \"react\";\nimport App from \"./App\";\nimport store from \"./redux/redux-store\"\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n// constants\r\nconst TOGGLE_IS_FETCHING = 'auth/TOGGLE_IS_FETCHING'\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA'\r\nconst GET_CAPTCHA_URL_SUCCESS = 'auth/GET_CAPTCHA_URL_SUCCESS'\r\n\r\n// state\r\nlet initialState = {\r\n    id: null as null | number,\r\n    email: null as null | string,\r\n    login: null as null | string,\r\n    isAuth: false as boolean,\r\n    isFetching: false as boolean,\r\n    captchaUrl: null as null | string,\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\n// reducer\r\nconst authReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {...state, ...action.payload}\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {...state, captchaUrl: action.captchaUrl}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\ntype SetAuthUserDataActionPayloadType = {\r\n    id: number|null\r\n    email: string|null\r\n    login: string|null\r\n    isAuth: boolean\r\n}\r\ntype SetAuthUserDataActionType = {\r\n    type: typeof SET_USER_DATA\r\n    payload: SetAuthUserDataActionPayloadType\r\n}\r\nexport const setAuthUserData =\r\n    (id: number|null, email: string|null, login: string|null, isAuth: boolean):SetAuthUserDataActionType => ({\r\n        type: SET_USER_DATA,\r\n        payload: {id, email, login, isAuth}\r\n    })\r\n\r\n\r\ntype ToggleIsFetchingActionType = {\r\n    type: typeof TOGGLE_IS_FETCHING\r\n    isFetching: boolean\r\n}\r\nexport const toggleIsFetching = (isFetching: boolean):ToggleIsFetchingActionType => ({type: TOGGLE_IS_FETCHING, isFetching})\r\n\r\ntype GetCaptchaUrlSuccessActionType = {\r\n    type: typeof GET_CAPTCHA_URL_SUCCESS\r\n    captchaUrl: string\r\n}\r\nexport const getCaptchaUrlSuccess = (captchaUrl: string):GetCaptchaUrlSuccessActionType => ({type: GET_CAPTCHA_URL_SUCCESS, captchaUrl})\r\n\r\n// thunks\r\nexport const getAuthUserData = () => async (dispatch: any) => {\r\n    let response = await authAPI.me()\r\n    if (response.resultCode === 0) {\r\n        let {id, email, login} = response.data;\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha?: string) => async (dispatch: any) => {\r\n    dispatch(toggleIsFetching(true))\r\n    let response = await authAPI.login(email, password, rememberMe, captcha)\r\n    if (response.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n        dispatch(toggleIsFetching(false))\r\n    } else {\r\n        if (response.resultCode === 10) {\r\n            dispatch(getCaptchaUrl())\r\n            dispatch(toggleIsFetching(false))\r\n        }\r\n        let message = response.messages.length > 0 ? response.messages[0] : 'Some error'\r\n        dispatch(stopSubmit('login', {_error: message}))\r\n        dispatch(toggleIsFetching(false))\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch: any) => {\r\n    const response = await securityAPI.getCaptchaUrl()\r\n    const captchaUrl = response.url\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n}\r\n\r\nexport const logout = () => async (dispatch: any) => {\r\n    let response = await authAPI.logout()\r\n    if (response.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default authReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__T5q2O\",\"appWrapperContent\":\"App_appWrapperContent__lA3ew\",\"requestError\":\"App_requestError__3X8eb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__iz9eP\",\"loginBlock\":\"Header_loginBlock__VV1H3\",\"name\":\"Header_name__ZJ309\"};","import React from 'react'\r\nimport preloader from '../../../assets/images/preloader.svg'\r\nimport styles from './Preloader.module.css'\r\n\r\ntype PropsType = {\r\n    styles?: string\r\n}\r\n\r\nconst Preloader: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <img alt='Loading...' className={props.styles ||styles.image} src={preloader}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Preloader_wrapper__Pe6Cj\",\"image\":\"Preloader_image__2Tzxo\"};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\"API-KEY\": \"a304db01-c89f-42a9-9f04-4fcf8746296e\"},\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 25) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n    follow(id) {\r\n        return instance.post(`follow/${id}`)\r\n            .then(response => response.data);\r\n    },\r\n    unfollow(id) {\r\n        return instance.delete(`follow/${id}`)\r\n            .then(response => response.data);\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(id) {\r\n        return instance.get(`profile/${id}`)\r\n            .then(response => response.data);\r\n    },\r\n    getStatus(id) {\r\n        return instance.get(`profile/status/${id}`)\r\n            .then(response => response.data);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {\r\n            status: status\r\n        })\r\n            .then(response => response.data);\r\n    },\r\n    updatePhoto(photoFile) {\r\n        const formData = new FormData()\r\n        formData.append('image', photoFile)\r\n\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n            .then(response => response.data);\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile)\r\n            .then(response => response.data);\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => response.data)\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n            .then(response => response.data)\r\n    },\r\n    logout(email, password, rememberMe = false) {\r\n        return instance.delete(`auth/login`)\r\n            .then(response => response.data)\r\n    },\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`)\r\n            .then(response => response.data)\r\n    },\r\n}\r\n\r\n\r\n","import {profileAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {PhotosType, PostType, ProfileType} from \"../types/types\";\r\n\r\nconst ADD_POST = 'profile/ADD-POST';\r\nconst SET_USER_PROFILE = 'profile/SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'profile/SET_USER_STATUS';\r\nconst DELETE_POST = 'profile/DELETE_POST';\r\nconst UPDATE_PHOTO_SUCCESS = 'profile/UPDATE_PHOTO_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCounts: 0},\r\n        {id: 2, message: 'It\\'s my first post', likesCounts: 15},\r\n        {id: 3, message: 'Yo', likesCounts: 31},\r\n    ] as Array<PostType>,\r\n    profile: {\r\n        aboutMe: null,\r\n        contacts: {\r\n            facebook: null,\r\n            website: null,\r\n            vk: null,\r\n            twitter: null,\r\n            instagram: null,\r\n            youtube: null,\r\n            github: null,\r\n            mainLink: null\r\n        },\r\n        lookingForAJob: null,\r\n        lookingForAJobDescription: null,\r\n        fullName: null,\r\n        userId: null,\r\n        photos: {\r\n            small: null,\r\n            large: null\r\n        },\r\n    } as ProfileType,\r\n    status: null as null | string,\r\n};\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\nconst profileReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCounts: 0,\r\n            };\r\n            return {...state,posts: [...state.posts, newPost, ]};\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: action.profile};\r\n        case SET_USER_STATUS:\r\n            return {...state, status: action.status};\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)};\r\n        case UPDATE_PHOTO_SUCCESS:\r\n            return {...state, profile: {...state.profile, photos: action.photos}};\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n// Action creators\r\ntype AddPostActionType = {\r\n    type: typeof ADD_POST\r\n    newPostText: string\r\n}\r\nexport const addPost = (newPostText: string): AddPostActionType => ({type: ADD_POST, newPostText});\r\n\r\ntype SetUserProfileActionType = {\r\n    type: typeof SET_USER_PROFILE\r\n    profile: ProfileType\r\n}\r\nexport const setUserProfile = (profile: ProfileType): SetUserProfileActionType => ({type: SET_USER_PROFILE, profile});\r\n\r\ntype setUserStatusActionType = {\r\n    type: typeof SET_USER_STATUS\r\n    status: string\r\n}\r\nexport const setUserStatus = (status: string): setUserStatusActionType => ({type: SET_USER_STATUS, status});\r\n\r\ntype DeletePostActionType = {\r\n    type: typeof DELETE_POST\r\n    postId: number\r\n}\r\nexport const deletePost = (postId: number): DeletePostActionType => ({type: DELETE_POST, postId});\r\n\r\ntype UpdatePhotoSuccessActionType = {\r\n    type: typeof UPDATE_PHOTO_SUCCESS\r\n    photos: PhotosType\r\n}\r\nexport const updatePhotoSuccess = (photos: PhotosType): UpdatePhotoSuccessActionType => ({type: UPDATE_PHOTO_SUCCESS, photos});\r\n\r\n// Thunks\r\nexport const getUserProfile = (id: number) => async (dispatch: any) => {\r\n    const response = await profileAPI.getProfile(id);\r\n    dispatch(setUserProfile(response))\r\n};\r\nexport const getUserStatus = (id: number) => async (dispatch: any) => {\r\n    const response = await profileAPI.getStatus(id);\r\n    dispatch(setUserStatus(response))\r\n};\r\nexport const updateUserStatus = (status: string) => async (dispatch: any) => {\r\n    const response = await profileAPI.updateStatus(status);\r\n    if (response.resultCode === 0)\r\n        dispatch(setUserStatus(status))\r\n};\r\n\r\nexport const updatePhoto = (file: any) => async (dispatch: any) => {\r\n    const response = await profileAPI.updatePhoto(file);\r\n    if (response.resultCode === 0)\r\n        dispatch(updatePhotoSuccess(response.data.photos))\r\n};\r\n\r\nexport const saveProfile = (profile: ProfileType) => async (dispatch: any, getState: any) => {\r\n    const id = getState().auth.id;\r\n    const response = await profileAPI.saveProfile(profile);\r\n    if (response.resultCode === 0) {\r\n        dispatch(getUserProfile(id))\r\n    } else {\r\n        let message = response.messages.length > 0 ? response.messages[0] : 'Some error';\r\n        dispatch(stopSubmit('edit_profile', {_error: message}));\r\n        return Promise.reject()\r\n    }\r\n};\r\n\r\nexport default profileReducer","import {DialogType, MessageType} from \"../types/types\";\r\n\r\nconst SEND_MESSAGE = 'dialogs/SEND_MESSAGE';\r\n\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'John',},\r\n        {id: 2, name: 'Connor',},\r\n        {id: 3, name: 'Alex',},\r\n        {id: 4, name: 'Lucon',},\r\n    ] as Array<DialogType>,\r\n    messages: [\r\n        {id: 1, message: 'Hi',},\r\n        {id: 2, message: 'How are you?',},\r\n        {id: 3, message: 'Yo',},\r\n    ] as Array<MessageType>,\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst dialogsReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let newMessage = {\r\n                id: 4,\r\n                message: action.newMessageText\r\n            }\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage],\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype SendMessageActionType = {\r\n    type: typeof SEND_MESSAGE\r\n    newMessageText: string\r\n}\r\nexport const sendMessage = (newMessageText: string): SendMessageActionType => ({type: SEND_MESSAGE, newMessageText})\r\n\r\nexport default dialogsReducer","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u\r\n    })\r\n}\r\n","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utilities/object-helpers\";\r\nimport {UserType} from \"../types/types\";\r\n\r\n// constants\r\nconst FOLLOW = 'users/FOLLOW';\r\nconst UNFOLLOW = 'users/UNFOLLOW';\r\nconst SET_USERS = 'users/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'users/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'users/TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n// state\r\n\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 25 as number,\r\n    totalUsersCount: 0 as number,\r\n    currentPage: 1 as number,\r\n    isFetching: false as boolean,\r\n    followingInProgress: [] as Array<number>,\r\n};\r\nexport type InitialStateType = typeof initialState\r\n\r\n// reducer\r\nconst usersReducer = (state = initialState, action: any): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            };\r\n        case UNFOLLOW:\r\n            return {...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            };\r\n        case SET_USERS:\r\n            return {...state, users: action.users};\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage};\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.totalCount};\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching};\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n// action creators\r\ntype FollowSuccessActionType = {\r\n    type: typeof FOLLOW\r\n    userId: number\r\n}\r\nexport const followSuccess = (userId: number): FollowSuccessActionType => ({type: FOLLOW, userId});\r\ntype UnfollowSuccessActionType = {\r\n    type: typeof UNFOLLOW\r\n    userId: number\r\n}\r\nexport const unfollowSuccess = (userId: number): UnfollowSuccessActionType => ({type: UNFOLLOW, userId});\r\ntype SetUsersActionType = {\r\n    type: typeof SET_USERS\r\n    users: Array<UserType>\r\n}\r\nexport const setUsers = (users: Array<UserType>): SetUsersActionType => ({type: SET_USERS, users});\r\ntype SetCurrentPageActionType = {\r\n    type: typeof SET_CURRENT_PAGE\r\n    currentPage: number\r\n}\r\nexport const setCurrentPage = (currentPage: number): SetCurrentPageActionType => ({type: SET_CURRENT_PAGE, currentPage});\r\ntype SetUsersTotalCountActionType = {\r\n    type: typeof SET_TOTAL_USERS_COUNT\r\n    totalCount: number\r\n}\r\nexport const setUsersTotalCount = (totalCount: number): SetUsersTotalCountActionType => ({type: SET_TOTAL_USERS_COUNT, totalCount});\r\ntype ToggleIsFetchingActionType = {\r\n    type: typeof TOGGLE_IS_FETCHING\r\n    isFetching: boolean\r\n}\r\nexport const toggleIsFetching = (isFetching: boolean): ToggleIsFetchingActionType => ({type: TOGGLE_IS_FETCHING, isFetching});\r\ntype ToggleFollowingProgressActionType = {\r\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS\r\n    isFetching: boolean\r\n    userId: number\r\n}\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number): ToggleFollowingProgressActionType =>\r\n    ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId});\r\n\r\n// thunks\r\nexport const requestUsers = (page: number, pageSize: number) => async (dispatch: any) => {\r\n    dispatch(toggleIsFetching(true));\r\n    let response = await usersAPI.getUsers(page, pageSize);\r\n\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(response.items));\r\n    dispatch(setUsersTotalCount(response.totalCount))\r\n\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch: any, id: number, apiMethod: any, actionCreator: any) => {\r\n    dispatch(toggleFollowingProgress(true, id));\r\n    let response = await apiMethod(id);\r\n\r\n    if (response.resultCode === 0) {\r\n        dispatch(actionCreator(id))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, id))\r\n\r\n};\r\n\r\nexport const follow = (id: number) => (dispatch: any) => {\r\n    followUnfollowFlow(dispatch, id, usersAPI.follow.bind(usersAPI), followSuccess)\r\n\r\n};\r\n\r\nexport const unfollow = (id: number) => (dispatch: any) => {\r\n    followUnfollowFlow(dispatch, id, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n\r\n};\r\n\r\n\r\nexport default usersReducer","module.exports = __webpack_public_path__ + \"static/media/preloader.a158fb4a.svg\";"],"sourceRoot":""}