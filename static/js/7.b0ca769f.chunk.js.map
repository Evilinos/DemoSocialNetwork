{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.js","utilities/validators/validators.js","components/Login/Login.jsx"],"names":["module","exports","Textarea","input","meta","props","hasError","touched","error","className","styles","formControl","Input","required","value","maxLengthCreator","maxLength","length","LoginForm","handleSubmit","onSubmit","component","validate","placeholder","name","type","reduxForm","form","connect","state","isAuth","auth","login","logout","to","formData","email","password","rememberMe"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,+B,oJCE9DC,EAAW,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,gCAE3CC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OAAO,oCACH,yBAAKC,UAAWC,IAAOC,YAAc,KAAOL,EAAWI,IAAOF,MAAQ,MAClE,6BACI,8CAAcL,EAAWE,KAE5BC,GAAY,8BAAOF,EAAKI,UAKxBI,EAAQ,SAAC,GAA6B,IAA5BT,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,gCAExCC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OAAO,oCACH,yBAAKC,UAAWC,IAAOC,YAAc,KAAOL,EAAWI,IAAOF,MAAQ,MAClE,6BACI,2CAAWL,EAAWE,KAEzBC,GAAY,8BAAOF,EAAKI,W,iCCxBrC,oEAAO,IAAMK,EAAW,SAAAC,GACpB,IAAIA,EACJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAGA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,iCCNjC,yGASIE,EAAY,YAA4B,IAA1BC,EAAyB,EAAzBA,aAAcX,EAAW,EAAXA,MAC5B,OACI,0BAAMY,SAAUD,GACZ,6BACI,kBAAC,IAAD,CAAOE,UAAWT,IAAOU,SAAU,CAACT,KAC7BU,YAAa,QAASC,KAAM,WAEvC,6BACI,kBAAC,IAAD,CAAOH,UAAWT,IAAOU,SAAU,CAACT,KAAWY,KAAM,WAC9CF,YAAa,WAAYC,KAAM,cAE1C,6BACI,kBAAC,IAAD,CAAOH,UAAW,QAASI,KAAM,WAAYD,KAAM,eADvD,gBAGChB,GAAS,yBAAKC,UAAWC,IAAOF,OAAQA,GACzC,6BACI,4CAMhBU,EAAYQ,YAAU,CAACC,KAAM,SAAjBD,CAA2BR,GAoBxBU,uBAHS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,UAEiB,CAACE,UAAOC,YAAjCL,EAlBD,SAACvB,GAKX,OAAIA,EAAMyB,OACC,kBAAC,IAAD,CAAUI,GAAI,aAGlB,6BACH,qCACA,kBAAChB,EAAD,CAAWE,SAVE,SAACe,GACd9B,EAAM2B,MAAMG,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/7.b0ca769f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1unnd\",\"error\":\"FormsControls_error__amWdj\"};","import React from \"react\";\r\nimport styles from './FormsControls.module.css'\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error\r\n    return <>\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : ' ')}>\r\n            <div>\r\n                <textarea {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n        </>\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error\r\n    return <>\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : ' ')}>\r\n            <div>\r\n                <input {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    </>\r\n}","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utilities/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login, logout} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from '../common/FormsControls/FormsControls.module.css'\r\n\r\nlet LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field component={Input} validate={[required]}\r\n                       placeholder={\"Email\"} name={'email'} />\r\n            </div>\r\n            <div>\r\n                <Field component={Input} validate={[required]} type={'password'}\r\n                       placeholder={\"Password\"} name={'password'} />\r\n            </div>\r\n            <div>\r\n                <Field component={'input'} type={'checkbox'} name={'rememberMe'}/> Remember Me\r\n            </div>\r\n            {error && <div className={styles.error}>{error}</div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nLoginForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginForm onSubmit={onSubmit} />\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, {login, logout})(Login)\r\n"],"sourceRoot":""}