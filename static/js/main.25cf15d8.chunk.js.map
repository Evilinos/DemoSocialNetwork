{"version":3,"sources":["components/Navbar/Navbar.module.css","serviceWorker.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","redux/app-reducer.js","App.js","redux/sidebar-reducer.js","redux/redux-store.js","index.js","redux/auth-reducer.js","components/common/Preloader/Preloader.jsx","components/Header/Header.module.css","components/common/Preloader/Preloader.module.css","redux/profile-reducer.js","api/api.js","redux/dialogsReducer.js","utilities/object-helpers.js","redux/users-reducer.js","assets/images/preloader.svg"],"names":["module","exports","Boolean","window","location","hostname","match","Header","props","className","styles","header","alt","src","loginBlock","isAuth","login","onClick","logout","to","HeaderContainer","this","React","Component","connect","state","auth","Navbar","s","nav","item","activeClassName","active","initialState","initialized","appReducer","action","type","DialogsContainer","lazy","UsersContainer","ProfileContainer","Login","App","initializeApp","fallback","Preloader","path","render","app","dispatch","getAuthUserData","then","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","sidebar","usersPage","usersReducer","authReducer","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","id","email","isFetching","setAuthUserData","payload","a","authAPI","me","response","resultCode","data","password","rememberMe","messages","length","stopSubmit","_error","wrapper","image","preloader","ADD_POST","posts","likesCounts","profile","status","addPost","newPostText","setUserStatus","getUserProfile","profileAPI","getProfile","getUserStatus","getStatus","updateUserStatus","updateStatus","updatePhoto","file","photos","saveProfile","getState","Promise","reject","newPost","filter","p","postId","instance","axios","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","follow","post","unfollow","delete","put","photoFile","formData","FormData","append","dialogs","name","sendMessage","newMessageText","newMessage","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","users","totalUsersCount","followingInProgress","followSuccess","userId","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","requestUsers","page","totalCount","followUnfollowFlow","apiMethod","actionCreator","bind","followed"],"mappings":"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","file":"static/js/main.25cf15d8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__wYuUc\",\"item\":\"Navbar_item__VdCig\",\"active\":\"Navbar_active__3TNvZ\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport styles from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={styles.header}>\r\n        <img alt='Logo' src='https://i.pinimg.com/736x/5a/ae/50/5aae503e4f037a5a4375944d8861fb6a.jpg'/>\r\n        <div className={styles.loginBlock}>\r\n            {props.isAuth\r\n                ? <div>\r\n                    {props.login} <div><button onClick={props.logout}>Log out</button></div>\r\n                </div>\r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n})\r\n\r\nexport default connect (mapStateToProps, {logout}) (HeaderContainer)","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}><NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink></div>\r\n            <div className={s.item}><NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink></div>\r\n            <div className={s.item}>News</div>\r\n            <div className={s.item}>Music</div>\r\n            <div className={s.item}>Settings</div>\r\n            <div className={s.item}><NavLink to=\"/users\" activeClassName={s.active}>Find Users</NavLink></div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'app/INITIALIZED_SUCCESS'\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {...state, initialized: true}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializedSucess = () => ({type: INITIALIZED_SUCCESS })\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData())\r\n    promise.then( () => {\r\n        dispatch(initializedSucess())\r\n    })\r\n}\r\n\r\nexport default appReducer","import React, {Suspense} from 'react';\nimport './App.css';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Navbar from './components/Navbar/Navbar';\nimport {Route} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\nconst UsersContainer = React.lazy (() => import('./components/Users/UsersContainer'))\nconst ProfileContainer = React.lazy (() => import('./components/Profile/ProfileContainer'))\nconst Login = React.lazy (() => import(\"./components/Login/Login\"))\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if (!this.props.initialized) return <Preloader/>\n\n        return <div className='app-wrapper'>\n            <HeaderContainer/>\n            <Navbar/>\n            <div className='app-wrapper-content'>\n                <Suspense fallback={<Preloader/>}>\n                    <Route path='/dialogs'\n                           render={() => <DialogsContainer/>}/>\n                    <Route path='/profile/:userId?'\n                           render={() => <ProfileContainer/>}/>\n                    <Route path='/users'\n                           render={() => <UsersContainer/>}/>\n                    <Route path='/login'\n                           render={() => <Login/>}/>\n                </Suspense>\n\n\n            </div>\n        </div>\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nexport default connect(mapStateToProps, ({initializeApp}))(App)","\r\nlet initialState = {}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state\r\n}\r\n\r\nexport default sidebarReducer","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\"\r\nimport profileReducer from \"./profile-reducer\"\r\nimport dialogsReducer from \"./dialogsReducer\"\r\nimport sidebarReducer from \"./sidebar-reducer\"\r\nimport usersReducer from \"./users-reducer\"\r\nimport authReducer from \"./auth-reducer\"\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)\r\n));\r\n\r\nexport default store","import * as serviceWorker from './serviceWorker';\nimport ReactDOM from \"react-dom\";\nimport './index.css';\nimport React from \"react\";\nimport App from \"./App\";\nimport store from \"./redux/redux-store\"\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n// constants\r\nconst TOGGLE_IS_FETCHING = 'auth/TOGGLE_IS_FETCHING'\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA'\r\n\r\n// state\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    isFetching: false,\r\n}\r\n\r\n// reducer\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA:\r\n            return {...state, ...action.payload}\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setAuthUserData =\r\n    (id, email, login, isAuth) => ({type: SET_USER_DATA, payload: {id, email, login, isAuth}})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\n\r\n// thunks\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me()\r\n    if (response.resultCode === 0) {\r\n        let {id, email, login} = response.data;\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n    if (response.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.messages.length > 0 ? response.messages[0] : 'Some error'\r\n        dispatch(stopSubmit('login', {_error: message}))\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if (response.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default authReducer","import React from 'react'\r\nimport preloader from '../../../assets/images/preloader.svg'\r\nimport styles from './Preloader.module.css'\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <img alt='Loading...' className={styles.image} src={preloader}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__iz9eP\",\"loginBlock\":\"Header_loginBlock__VV1H3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Preloader_wrapper__Pe6Cj\",\"image\":\"Preloader_image__2Tzxo\"};","import {profileAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'profile/ADD-POST';\r\nconst SET_USER_PROFILE = 'profile/SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'profile/SET_USER_STATUS';\r\nconst DELETE_POST = 'profile/DELETE_POST';\r\nconst UPDATE_PHOTO_SUCCESS = 'profile/UPDATE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCounts: '0',},\r\n        {id: 2, message: 'It\\'s my first post', likesCounts: '15',},\r\n        {id: 3, message: 'Yo', likesCounts: '31',},\r\n    ],\r\n    profile: null,\r\n    status: null,\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCounts: 0,\r\n            }\r\n            return {...state, posts: [...state.posts, newPost]}\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: action.profile}\r\n        case SET_USER_STATUS:\r\n            return {...state, status: action.status}\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n        case UPDATE_PHOTO_SUCCESS:\r\n            return {...state, profile: {...state.profile, photos: action.photos }}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// Action creators\r\nexport const addPost = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setUserStatus = (status) => ({type: SET_USER_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const updatePhotoSuccess = (photos) => ({type: UPDATE_PHOTO_SUCCESS, photos})\r\n\r\n// Thunks\r\nexport const getUserProfile = (id) => async (dispatch) => {\r\n    const response = await profileAPI.getProfile(id)\r\n    dispatch(setUserProfile(response))\r\n}\r\nexport const getUserStatus = (id) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(id)\r\n    dispatch(setUserStatus(response))\r\n}\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status)\r\n    if (response.resultCode === 0)\r\n        dispatch(setUserStatus(status))\r\n}\r\n\r\nexport const updatePhoto = (file) => async (dispatch) => {\r\n    const response = await profileAPI.updatePhoto(file)\r\n    if (response.resultCode === 0)\r\n        dispatch(updatePhotoSuccess(response.data.photos))\r\n}\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const id = getState().auth.id\r\n    const response = await profileAPI.saveProfile(profile)\r\n    if (response.resultCode === 0){\r\n        dispatch(getUserProfile(id))\r\n    } else {\r\n        let message = response.messages.length > 0 ? response.messages[0] : 'Some error'\r\n        dispatch(stopSubmit('edit_profile', {_error: message}))\r\n        return Promise.reject()\r\n    }\r\n}\r\n\r\nexport default profileReducer","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\"API-KEY\": \"a304db01-c89f-42a9-9f04-4fcf8746296e\"},\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 25) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n    follow(id) {\r\n        return instance.post(`follow/${id}`)\r\n            .then(response => response.data);\r\n    },\r\n    unfollow(id) {\r\n        return instance.delete(`follow/${id}`)\r\n            .then(response => response.data);\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(id) {\r\n        return instance.get(`profile/${id}`)\r\n            .then(response => response.data);\r\n    },\r\n    getStatus(id) {\r\n        return instance.get(`profile/status/${id}`)\r\n            .then(response => response.data);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {\r\n            status: status\r\n        })\r\n            .then(response => response.data);\r\n    },\r\n    updatePhoto(photoFile) {\r\n        const formData = new FormData()\r\n        formData.append('image', photoFile)\r\n\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n            .then(response => response.data);\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile)\r\n            .then(response => response.data);\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => response.data)\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n            .then(response => response.data)\r\n    },\r\n    logout(email, password, rememberMe = false) {\r\n        return instance.delete(`auth/login`)\r\n            .then(response => response.data)\r\n    },\r\n}\r\n\r\n","const SEND_MESSAGE = 'dialogs/SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'John',},\r\n        {id: 2, name: 'Connor',},\r\n        {id: 3, name: 'Alex',},\r\n        {id: 4, name: 'Lucon',},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi',},\r\n        {id: 2, message: 'How are you?',},\r\n        {id: 3, message: 'Yo',},\r\n    ],\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SEND_MESSAGE:\r\n            let newMessage = {\r\n                id: 4,\r\n                message: action.newMessageText\r\n            }\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage],\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const sendMessage = (newMessageText) => ({type: SEND_MESSAGE, newMessageText})\r\n\r\nexport default dialogsReducer","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\ndebugger\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u\r\n    })\r\n}\r\n","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utilities/object-helpers\";\r\n\r\n// constants\r\nconst FOLLOW = 'users/FOLLOW'\r\nconst UNFOLLOW = 'users/UNFOLLOW'\r\nconst SET_USERS = 'users/SET_USERS'\r\nconst SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'users/SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'users/TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\n// state\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 25,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n}\r\n\r\n// reducer\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case SET_USERS:\r\n            return {...state, users: action.users}\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.totalCount}\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setUsersTotalCount = (totalCount) => ({type: SET_TOTAL_USERS_COUNT, totalCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) =>\r\n    ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId})\r\n\r\n// thunks\r\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    let response = await usersAPI.getUsers(page, pageSize)\r\n\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(response.items))\r\n    dispatch(setUsersTotalCount(response.totalCount))\r\n\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, id, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, id))\r\n    let response = await apiMethod(id)\r\n\r\n    if (response.resultCode === 0) {\r\n        dispatch(actionCreator(id))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, id))\r\n\r\n}\r\n\r\nexport const follow = (id) => (dispatch) => {\r\n    followUnfollowFlow(dispatch, id, usersAPI.follow.bind(usersAPI), followSuccess)\r\n\r\n}\r\n\r\nexport const unfollow = (id) => (dispatch) => {\r\n    followUnfollowFlow(dispatch, id, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n\r\n}\r\n\r\n\r\nexport default usersReducer","module.exports = __webpack_public_path__ + \"static/media/preloader.a158fb4a.svg\";"],"sourceRoot":""}